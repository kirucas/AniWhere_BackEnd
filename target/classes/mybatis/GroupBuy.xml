<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace속성:매퍼파일의 완전한경로 .xml는 생략 -->
<!-- ※ibatis와는 다르게 id값에 .(dot)를 사용 못한다. -->
<mapper namespace="mybatis.GroupBuy">

	<select id="groupbuyCount" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*)
		FROM (
			SELECT mgb.*, mem_nickname, animal_name
			FROM market_group_buy mgb LEFT JOIN member mb ON mgb.mem_no=mb.mem_no
			JOIN animal_category ac ON mgb.animal_code = ac.animal_code
			<if test="animal_code != null and title != null">
				WHERE mgb.animal_code=#{animal_code} AND title like '%'||#{title}||'%'
			</if>
			<if test="animal_code != null and content != null">
				WHERE mgb.animal_code=#{animal_code} AND content like '%'||#{content}||'%'
			</if>
			<if test="animal_code != null">
				WHERE mgb.animal_code=#{animal_code}
			</if>
			<if test="title != null">
				WHERE title=#{title}
			</if>
			<if test="content != null">
				WHERE content=#{content}
			</if>
			)
	</select>
	
	<select id="groupbuySelectList" parameterType="java.util.Map" resultType="GroupDTO">
		SELECT *
		FROM (
			SELECT T.*, ROWNUM R
			FROM (
				SELECT gb.*, mem_nickname, animal_name
				FROM market_group_buy gb LEFT JOIN member mb ON gb.mem_no = mb.mem_no
				JOIN animal_category ac ON gb.animal_code = ac.animal_code
				<if test="animal_code != null and title != null">
					WHERE gb.animal_code=#{animal_code} AND title like '%'||#{title}||'%'
				</if>
				<if test="animal_code != null and content != null">
					WHERE gb.animal_code=#{animal_code} AND content like '%'||#{content}||'%'
				</if>
				<if test="animal_code != null">
					WHERE gb.animal_code=#{animal_code}
				</if>
				<if test="title != null">
					WHERE title=#{title}
				</if>
				<if test="content != null">
					WHERE content=#{content}
				</if>
				ORDER BY no DESC
				) T
			)
		WHERE R BETWEEN #{start} AND #{end}
	</select>
	
	<select id="groupbuySum" parameterType="java.util.Map" resultType="int">
		SELECT SUM(buy_count)
		FROM group_buy
		WHERE no=#{no}
	</select>
	
	<select id="groupbuySelectOne" parameterType="java.util.Map" resultType="GroupDTO">
		SELECT gb.*, mem_nickname, animal_name
		FROM market_group_buy gb LEFT JOIN member mb ON gb.mem_no = mb.mem_no
		JOIN animal_category ac ON gb.animal_code = ac.animal_code
		WHERE no=#{no}
	</select>
	
	<insert id="groupbuyInsert" parameterType="java.util.Map">
		INSERT INTO market_group_buy(no, mem_no, animal_code, title, content, goal, deadline, regidate)
		VALUES(seq_group_buy.nextval, #{mem_no}, #{animal_code}, #{title}, #{content}, #{goal}, #{deadline}, #{today})
	</insert>
	
	<update id="groupbuyUpdate" parameterType="java.util.Map">
		UPDATE market_group_buy
		SET animal_code=#{animal_code}, title=#{title}, content=#{content}, goal=#{goal}, deadline=#{deadline}
		WHERE no=#{no}
	</update>
	
	<delete id="groupbuyDelete" parameterType="java.util.Map">
		DELETE FROM market_group_buy
		WHERE no=#{no}
	</delete>
	
	<update id="addCountGroupBuy" parameterType="java.util.Map">
		UPDATE market_group_buy
		SET count=count + 1
		WHERE no=#{no}
	</update>
	
</mapper>